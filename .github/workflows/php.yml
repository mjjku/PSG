name: "Proxy Subscription Generator (PSG)"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' # Run every hour exactly

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      http_proxy: ${{ secrets.HTTP_PROXY }}
      https_proxy: ${{ secrets.HTTPS_PROXY }}
      no_proxy: "*.github.com,github.com,localhost,127.0.0.1"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, curl, sockets
          tools: composer

      - name: Setup Cloudflare WARP
        run: |
          set -e
          echo "--- Setting up official Cloudflare WARP client ---"
          sudo apt-get update && sudo apt-get install -y apt-transport-https lsb-release gnupg
          curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          sudo apt-get update && sudo apt-get install -y cloudflare-warp
          warp-cli --version
          warp-cli registration new
          warp-cli connect
          if curl https://www.cloudflare.com/cdn-cgi/trace/ | grep -q "warp=on"; then
            echo "‚úÖ Cloudflare WARP connected successfully"
          else
            echo "‚ùå Failed to connect Cloudflare WARP" && exit 1
          fi
          echo "--- ‚úÖ Cloudflare WARP setup complete ---"

      - name: Patch precheck.php for PHP 8 compatibility
        run: |
          if [ -f "scripts/precheck.php" ]; then
            sed -i 's/stream_set_blocking(\([^,]*\), *0)/stream_set_blocking(\1, false)/g' scripts/precheck.php
            sed -i 's/stream_set_blocking(\([^,]*\), *1)/stream_set_blocking(\1, true)/g' scripts/precheck.php
            echo "‚úÖ Patch applied to scripts/precheck.php"
          else
            echo "‚ÑπÔ∏è scripts/precheck.php not found, skipping patch."
          fi

      - name: Generate Full Subscriptions
        run: |
          set -e
          echo "--- Starting Full PSG Generation ---"
          php channelsAssets.php || { echo "‚ùå channelsAssets.php failed"; exit 1; }
          php get.php || { echo "‚ùå get.php failed"; exit 1; }
          php duplicate.php || { echo "‚ùå duplicate.php failed"; exit 1; }
          php sort.php || { echo "‚ùå sort.php failed"; exit 1; }
          php toSingbox.php || { echo "‚ùå toSingbox.php failed"; exit 1; }
          php toClashSurfboard.php || { echo "‚ùå toClashSurfboard.php failed"; exit 1; }
          php hiddifyWarp.php || { echo "‚ùå hiddifyWarp.php failed"; exit 1; }
          echo "--- ‚úÖ Full Generation Complete ---"

      - name: Generate Lite Subscriptions
        run: |
          set -e
          echo "--- Starting Lite PSG Generation ---"
          cd lite
          php channelsAssets.php || { echo "‚ùå channelsAssets.php failed"; exit 1; }
          php get.php || { echo "‚ùå get.php failed"; exit 1; }
          php duplicate.php || { echo "‚ùå duplicate.php failed"; exit 1; }
          php sort.php || { echo "‚ùå sort.php failed"; exit 1; }
          php toSingbox.php || { echo "‚ùå toSingbox.php failed"; exit 1; }
          php toClashSurfboard.php || { echo "‚ùå toClashSurfboard.php failed"; exit 1; }
          echo "--- ‚úÖ Lite Generation Complete ---"

      - name: Generate HTML Index Page
        run: |
          set -e
          echo "--- Generating HTML index page ---"
          php generate_page.php || { echo "‚ùå generate_page.php failed"; exit 1; }
          echo "--- ‚úÖ HTML index page generated ---"

      - name: Disconnect Cloudflare WARP
        if: always()
        run: |
          warp-cli disconnect || true
          echo "‚ÑπÔ∏è Cloudflare WARP disconnected"

      - name: Commit and Push Files
        env:
          TOKEN: ${{ secrets.PAT_TOKEN || github.token }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "üöÄ Subscription Update | $(TZ='Asia/Tehran' date '+%Y-%m-%d %H:%M:%S')" || echo "‚ÑπÔ∏è No changes to commit."
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:${GITHUB_REF}
